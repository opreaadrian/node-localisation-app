// Extra ; in order to prevent concatenation errors when combining with third party plugins
;(function(window, document, undefined) {

  'use strict';

  /** Check for geolocation support in an optimal manner*/
  var hasGeolocation = 'geolocation' in window.navigator;

  /** Return early and save some extra calls if geolocation API is unsupported */
  if (!hasGeolocation) {

    throw new Error('Operation not supported: geolocation unavailable.');

  }

  navigator.geolocation.getCurrentPosition(function(position) {
    
    initializeMap(position.coords);

  });

  /**
   * @method initializeMap Initializes the google map constructor with the user's current position
   *
   * @param {object} coords The coordinates object, containing the user's position specified in
   * terms of latitude / longitude -- obtained from HTML5 geolocation API
   */
  function initializeMap(coords) {
    var mapOptions,
      mapCanvas,
      map;
      
    mapOptions = {
      zoom: 10,
      center: new google.maps.LatLng(coords.latitude, coords.longitude),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };

    mapCanvas = document.querySelector('.map-canvas');
    map = new google.maps.Map(mapCanvas, mapOptions);

    initializeInfoPanel(map, coords);
  }

  /**
   * @method initializeInfoPanel
   *
   * @param {object} map The map object generated by initializeMap
   * @param {object} coords The coordinates object, specifying the current position of our user
   */
  function initializeInfoPanel(map, coords) {
    var infoWindow,
      pos;

    pos = new google.maps.LatLng(coords.latitude, coords.longitude);

    infoWindow = new google.maps.InfoWindow({
      map: map,
      position: pos,
      content: 'Latitude: ' + coords.latitude + '<br> Longitude: ' + coords.longitude,
    });

    map.setCenter(pos);
  }


})(window, document);
